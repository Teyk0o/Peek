name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write  # Required to create releases

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Decode certificate
        run: |
          echo "${{ secrets.PEEK_CERTIFICATE_BASE64 }}" | base64 --decode > PeekCertificate.pfx
        shell: bash

      - name: Configure CMake (Release)
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles"
        env:
          PEEK_CERT_PASSWORD: ${{ secrets.PEEK_CERT_PASSWORD }}

      - name: Build
        run: |
          cmake --build build --config Release -j 4
        env:
          PEEK_CERT_PASSWORD: ${{ secrets.PEEK_CERT_PASSWORD }}

      - name: Sign executable
        run: |
          $signtool = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits" -Recurse -Filter "signtool.exe" -ErrorAction SilentlyContinue | Select-Object -First 1 -ExpandProperty FullName
          if ($signtool) {
            Write-Host "Found signtool at: $signtool"
            & $signtool sign /f "PeekCertificate.pfx" /p "$env:PEEK_CERT_PASSWORD" /tr http://timestamp.digicert.com /td sha256 /fd sha256 /v "build/Peek.exe"
          } else {
            Write-Error "signtool.exe not found"
            exit 1
          }
        shell: pwsh
        env:
          PEEK_CERT_PASSWORD: ${{ secrets.PEEK_CERT_PASSWORD }}

      - name: Verify signature
        run: |
          Get-AuthenticodeSignature build/Peek.exe | Format-List
        shell: pwsh

      - name: Package executable
        run: |
          mkdir -p release-package
          cp build/Peek.exe release-package/
          cp -r assets release-package/
          echo "PEEK - Network Monitor" > release-package/README.txt
          echo "" >> release-package/README.txt
          echo "Version: ${{ github.ref_name }}" >> release-package/README.txt
          echo "Built on: $(date)" >> release-package/README.txt
          echo "" >> release-package/README.txt
          echo "Usage: Simply run Peek.exe" >> release-package/README.txt
          echo "The application monitors network connections in real-time." >> release-package/README.txt
        shell: bash

      - name: Cleanup certificate
        if: always()
        run: |
          rm -f PeekCertificate.pfx
        shell: bash

      - name: Create ZIP archive
        run: |
          cd release-package
          7z a ../Peek-${{ github.ref_name }}-Windows-x64.zip *
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Peek-${{ github.ref_name }}-Windows-x64.zip
            build/Peek.exe
          body: |
            ## PEEK - Network Monitor ${{ github.ref_name }}

            ### Features
            - Real-time network connection monitoring
            - Connection direction detection (Inbound/Outbound)
            - Localhost connection filtering
            - Connection grouping by process and endpoint
            - Visual flash effects for new connections
            - Clean light theme UI

            ### Installation
            1. Download `Peek-${{ github.ref_name }}-Windows-x64.zip`
            2. Extract the archive
            3. Run `Peek.exe`

            ### Requirements
            - Windows 10/11
            - x64 architecture

            ### Files
            - `Peek-${{ github.ref_name }}-Windows-x64.zip`: Complete package with assets
            - `Peek.exe`: Standalone executable

            ---
            ðŸ¤– Built automatically with GitHub Actions
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
